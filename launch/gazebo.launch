<launch>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find car_fix_wheels)/worlds/custome_world.world" />
    <arg name="use_sim_time" default="true" />
  </include>


  <env name="GAZEBO_MODEL_PATH" value="$(find car_fix_wheels)/models:$(optenv GAZEBO_MODEL_PATH)" />
  <param name="robot_description" textfile="$(find car_fix_wheels)/urdf/car_fix_wheels.urdf" />
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model robot -param robot_description -x 0 -y 0 -z 0.1" />

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>


  <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher">
    <param name="use_gui" value="false" />
  </node>
  
  <node name="tf_footprint_base" pkg="tf" type="static_transform_publisher"
    args="0 0 0 0 0 0 base_link base_footprint 40" />

  <node name="fake_joint_calibration" pkg="rostopic" type="rostopic"
    args="pub /calibrated std_msgs/Bool true" />
    
  <rosparam file="$(find car_fix_wheels)/config/controllers.yaml" command="load" />

  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen"
    args="joint_state_controller arm_1_joint_controller arm_2_joint_controller" />

</launch>