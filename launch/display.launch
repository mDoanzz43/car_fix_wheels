<!-- <launch>
  <param name="use_sim_time" value="true"/>
  <include
    file="$(find car_fix_wheels)/launch/test_world.launch" />
  <arg
    name="model" />
  <param
    name="robot_description"
    textfile="$(find car_fix_wheels)/urdf/car_fix_wheels.urdf" />
  <node
    name="joint_state_publisher"
    pkg="joint_state_publisher"
    type="joint_state_publisher" /> 
  <node
    name="robot_state_publisher"
    pkg="robot_state_publisher"
    type="robot_state_publisher" />
    <param name="publish_frequency" value="50.0"/>

    <node pkg="tf" type="static_transform_publisher" name="odom_to_bf"
    args="0 0 0 0 0 0 odom base_footprint 100"/>

    <node pkg="tf" type="static_transform_publisher" name="bf_to_bl"
    args="0 0 0 0 0 0 base_footprint base_link 100"/>

  <node
    name="spawn_model"
    pkg="gazebo_ros"
    type="spawn_model"
    args="-file $(find car_fix_wheels)/urdf/car_fix_wheels.urdf -urdf -model car_fix_wheels"
    output="screen" />
  <node
    name="fake_joint_calibration"
    pkg="rostopic"
    type="rostopic"
    args="pub /calibrated std_msgs/Bool true" />
  <rosparam file="$(find car_fix_wheels)/config/controllers.yaml" command="load"/>

  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"
        args="joint_state_controller arm_1_joint_controller arm_2_joint_controller" />
</launch> -->

<launch>
  <param name="use_sim_time" value="true"/>
  <include
    file="$(find gazebo_ros)/launch/empty_world.launch" />
  <arg
    name="model" />
  <param
    name="robot_description"
    textfile="$(find car_fix_wheels)/urdf/car_fix_wheels.urdf" />
  <node
    name="joint_state_publisher"
    pkg="joint_state_publisher"
    type="joint_state_publisher" /> 
  <node
    name="robot_state_publisher"
    pkg="robot_state_publisher"
    type="robot_state_publisher" />
    <param name="publish_frequency" value="50.0"/>
  <node
    name="rviz"
    pkg="rviz"
    type="rviz"
    args="-d $(find car_fix_wheels)/rviz/main.rviz" />
  <node
    name="spawn_model"
    pkg="gazebo_ros"
    type="spawn_model"
    args="-file $(find car_fix_wheels)/urdf/car_fix_wheels.urdf -urdf -model car_fix_wheels"
    output="screen" />
  <node
    name="fake_joint_calibration"
    pkg="rostopic"
    type="rostopic"
    args="pub /calibrated std_msgs/Bool true" />
  <rosparam file="$(find car_fix_wheels)/config/controllers.yaml" command="load"/>

  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"
        args="joint_state_controller arm_1_joint_controller arm_2_joint_controller" />
</launch>